from shapely.ops import nearest_points

def nearGeom(point, pts=None, gdfIn=None, outVar=None):
    # find the nearest point and return the corresponding Place value
    nearest = gdfIn.geometry == nearest_points(point, pts)[1]
    geometries = gdfIn[nearest].geometry.to_numpy()[0]
    indeces = gdfIn[nearest].index.to_numpy()[0]
    if outVar == "index":
        return indeces
    elif outVar == "geometries":
        return geometries
    else:
        raise

def search_string_in_file(file_name, string_to_search):
    """Search for the given string in file and return lines containing that string,
    along with line numbers"""
    line_number = 0
    list_of_results = []
    # Open the file in read only mode
    with open(file_name, 'r') as read_obj:
        # Read all lines in the file one by one
        for line in read_obj:
            # For each line, check if line contains the string
            if string_to_search in line:
                # If yes, then add the line number & line as a tuple in the list
                list_of_results.append((line_number, line.rstrip()))
            line_number += 1
    # Return list of tuples containing line numbers and lines where string is found
    return list_of_results

def search_by_line_num(file_name, lineIndex):
    with open(file_name) as fp:
        for i, line in enumerate(fp):
            if i == lineIndex:
                dummyPt = line
    return dummyPt